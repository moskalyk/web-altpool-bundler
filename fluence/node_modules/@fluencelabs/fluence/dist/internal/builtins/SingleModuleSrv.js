"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeUtils = exports.Srv = exports.defaultGuard = void 0;
var uuid_1 = require("uuid");
var browser_or_node_1 = require("browser-or-node");
var securityGuard_1 = require("./securityGuard");
var defaultGuard = function (peer) {
    return (0, securityGuard_1.allowOnlyParticleOriginatedAt)(peer.getStatus().peerId);
};
exports.defaultGuard = defaultGuard;
var Srv = /** @class */ (function () {
    function Srv(peer) {
        this.peer = peer;
        this.services = new Set();
        this.securityGuard_create = (0, exports.defaultGuard)(this.peer);
        this.securityGuard_remove = (0, exports.defaultGuard)(this.peer);
    }
    Srv.prototype.create = function (wasm_b64_content, callParams) {
        return __awaiter(this, void 0, void 0, function () {
            var newServiceId, buffer, sab, tmp, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.securityGuard_create(callParams)) {
                            return [2 /*return*/, {
                                    success: false,
                                    error: 'Security guard validation failed',
                                    service_id: null,
                                }];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        newServiceId = (0, uuid_1.v4)();
                        buffer = Buffer.from(wasm_b64_content, 'base64');
                        sab = new SharedArrayBuffer(buffer.length);
                        tmp = new Uint8Array(sab);
                        tmp.set(buffer, 0);
                        return [4 /*yield*/, this.peer.registerMarineService(sab, newServiceId)];
                    case 2:
                        _a.sent();
                        this.services.add(newServiceId);
                        return [2 /*return*/, {
                                success: true,
                                service_id: newServiceId,
                                error: null,
                            }];
                    case 3:
                        err_1 = _a.sent();
                        return [2 /*return*/, {
                                success: true,
                                service_id: null,
                                error: err_1.message,
                            }];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    Srv.prototype.remove = function (service_id, callParams) {
        if (!this.securityGuard_remove(callParams)) {
            return {
                success: false,
                error: 'Security guard validation failed',
                service_id: null,
            };
        }
        if (!this.services.has(service_id)) {
            return {
                success: false,
                error: "Service with id ".concat(service_id, " not found"),
            };
        }
        this.peer.removeMarineService(service_id);
        this.services.delete(service_id);
        return {
            success: true,
            error: null,
        };
    };
    Srv.prototype.list = function () {
        return Array.from(this.services.values());
    };
    return Srv;
}());
exports.Srv = Srv;
var NodeUtils = /** @class */ (function () {
    function NodeUtils(peer) {
        this.peer = peer;
        this.securityGuard_readFile = (0, exports.defaultGuard)(this.peer);
    }
    NodeUtils.prototype.read_file = function (path, callParams) {
        return __awaiter(this, void 0, void 0, function () {
            var r, fs, data, err_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!browser_or_node_1.isNode) {
                            return [2 /*return*/, {
                                    success: false,
                                    error: 'read_file is only supported in node.js',
                                    content: null,
                                }];
                        }
                        if (!this.securityGuard_readFile(callParams)) {
                            return [2 /*return*/, {
                                    success: false,
                                    error: 'Security guard validation failed',
                                    content: null,
                                }];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        r = eval('require');
                        fs = r('fs').promises;
                        return [4 /*yield*/, fs.readFile(path)];
                    case 2:
                        data = _a.sent();
                        return [2 /*return*/, {
                                success: true,
                                content: data,
                                error: null,
                            }];
                    case 3:
                        err_2 = _a.sent();
                        return [2 /*return*/, {
                                success: false,
                                error: err_2.message,
                                content: null,
                            }];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    return NodeUtils;
}());
exports.NodeUtils = NodeUtils;
//# sourceMappingURL=SingleModuleSrv.js.map