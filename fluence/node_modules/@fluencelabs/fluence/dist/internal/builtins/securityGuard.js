"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.or = exports.and = exports.allowOnlyParticleOriginatedAt = exports.allowExactJsonPath = exports.allowServiceFn = exports.allowTetraplet = void 0;
/**
 * Only allow calls when tetraplet for 'data' argument satisfies the predicate
 */
var allowTetraplet = function (pred) {
    return function (params) {
        var t = params.tetraplets.data[0];
        return pred(t);
    };
};
exports.allowTetraplet = allowTetraplet;
/**
 * Only allow data which comes from the specified serviceId and fnName
 */
var allowServiceFn = function (serviceId, fnName) {
    return (0, exports.allowTetraplet)(function (t) {
        return t.service_id === serviceId && t.function_name === fnName;
    });
};
exports.allowServiceFn = allowServiceFn;
/**
 * Only allow data originated from the specified json_path
 */
var allowExactJsonPath = function (jsonPath) {
    return (0, exports.allowTetraplet)(function (t) {
        return t.json_path === jsonPath;
    });
};
exports.allowExactJsonPath = allowExactJsonPath;
/**
 * Only allow signing when particle is initiated at the specified peer
 */
var allowOnlyParticleOriginatedAt = function (peerId) {
    return function (params) {
        return params.initPeerId === peerId;
    };
};
exports.allowOnlyParticleOriginatedAt = allowOnlyParticleOriginatedAt;
/**
 * Only allow signing when all of the predicates are satisfied.
 * Useful for predicates reuse
 */
var and = function () {
    var predicates = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        predicates[_i] = arguments[_i];
    }
    return function (params) { return predicates.every(function (x) { return x(params); }); };
};
exports.and = and;
/**
 * Only allow signing when any of the predicates are satisfied.
 * Useful for predicates reuse
 */
var or = function () {
    var predicates = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        predicates[_i] = arguments[_i];
    }
    return function (params) { return predicates.some(function (x) { return x(params); }); };
};
exports.or = or;
//# sourceMappingURL=securityGuard.js.map