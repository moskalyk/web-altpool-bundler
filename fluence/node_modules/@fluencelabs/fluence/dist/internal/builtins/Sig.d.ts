import { CallParams, PeerIdB58 } from '../commonTypes';
import { KeyPair } from '@fluencelabs/keypair';
import { SigDef } from '../_aqua/services';
import { SecurityGuard } from './securityGuard';
export declare const defaultSigGuard: (peerId: PeerIdB58) => SecurityGuard<"data">;
export declare class Sig implements SigDef {
    private _keyPair;
    constructor(keyPair: KeyPair);
    /**
     * Configurable security guard for sign method
     */
    securityGuard: SecurityGuard<'data'>;
    /**
     * Gets the public key of KeyPair. Required by aqua
     */
    get_peer_id(): string;
    /**
     * Signs the data using key pair's private key. Required by aqua
     */
    sign(data: number[], callParams: CallParams<'data'>): Promise<{
        error: string | null;
        signature: number[] | null;
        success: boolean;
    }>;
    /**
     * Verifies the signature. Required by aqua
     */
    verify(signature: number[], data: number[]): Promise<boolean>;
}
//# sourceMappingURL=Sig.d.ts.map