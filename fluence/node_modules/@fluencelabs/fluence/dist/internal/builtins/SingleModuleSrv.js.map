{"version":3,"file":"SingleModuleSrv.js","sourceRoot":"","sources":["../../../src/internal/builtins/SingleModuleSrv.ts"],"names":[],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { SrvDef } from '../_aqua/single-module-srv';\nimport { NodeUtilsDef } from '../_aqua/node-utils';\nimport { FluencePeer } from '../FluencePeer';\nimport { isNode } from 'browser-or-node';\nimport { CallParams } from '../commonTypes';\nimport { allowOnlyParticleOriginatedAt, SecurityGuard } from './securityGuard';\n\nexport const defaultGuard = (peer: FluencePeer) => {\n    return allowOnlyParticleOriginatedAt<any>(peer.getStatus().peerId!);\n};\n\nexport class Srv implements SrvDef {\n    private services: Set<string> = new Set();\n\n    constructor(private peer: FluencePeer) {}\n\n    securityGuard_create: SecurityGuard<'wasm_b64_content'> = defaultGuard(this.peer);\n\n    async create(wasm_b64_content: string, callParams: CallParams<'wasm_b64_content'>) {\n        if (!this.securityGuard_create(callParams)) {\n            return {\n                success: false,\n                error: 'Security guard validation failed',\n                service_id: null,\n            };\n        }\n\n        try {\n            const newServiceId = uuidv4();\n            const buffer = Buffer.from(wasm_b64_content, 'base64');\n            const sab = new SharedArrayBuffer(buffer.length);\n            const tmp = new Uint8Array(sab);\n            tmp.set(buffer, 0);\n            await this.peer.registerMarineService(sab, newServiceId);\n            this.services.add(newServiceId);\n\n            return {\n                success: true,\n                service_id: newServiceId,\n                error: null,\n            };\n        } catch (err: any) {\n            return {\n                success: true,\n                service_id: null,\n                error: err.message,\n            };\n        }\n    }\n\n    securityGuard_remove: SecurityGuard<'service_id'> = defaultGuard(this.peer);\n\n    remove(service_id: string, callParams: CallParams<'service_id'>) {\n        if (!this.securityGuard_remove(callParams)) {\n            return {\n                success: false,\n                error: 'Security guard validation failed',\n                service_id: null,\n            };\n        }\n\n        if (!this.services.has(service_id)) {\n            return {\n                success: false,\n                error: `Service with id ${service_id} not found`,\n            };\n        }\n\n        this.peer.removeMarineService(service_id);\n        this.services.delete(service_id);\n\n        return {\n            success: true,\n            error: null,\n        };\n    }\n\n    list() {\n        return Array.from(this.services.values());\n    }\n}\n\nexport class NodeUtils implements NodeUtilsDef {\n    constructor(private peer: FluencePeer) {}\n\n    securityGuard_readFile: SecurityGuard<'path'> = defaultGuard(this.peer);\n\n    async read_file(path: string, callParams: CallParams<'path'>) {\n        if (!isNode) {\n            return {\n                success: false,\n                error: 'read_file is only supported in node.js',\n                content: null,\n            };\n        }\n\n        if (!this.securityGuard_readFile(callParams)) {\n            return {\n                success: false,\n                error: 'Security guard validation failed',\n                content: null,\n            };\n        }\n\n        try {\n            // eval('require') is needed so that\n            // webpack will complain about missing dependencies for web target\n            const r = eval('require');\n            const fs = r('fs').promises;\n            const data = await fs.readFile(path);\n            return {\n                success: true,\n                content: data,\n                error: null,\n            };\n        } catch (err: any) {\n            return {\n                success: false,\n                error: err.message,\n                content: null,\n            };\n        }\n    }\n}\n"]}