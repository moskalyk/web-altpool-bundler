{"version":3,"file":"node-utils.js","sourceRoot":"","sources":["../../../src/internal/_aqua/node-utils.ts"],"names":[],"mappings":";;;AAUA,wDAAsE;AAiBtE,SAAgB,iBAAiB;IAAC,cAAY;SAAZ,UAAY,EAAZ,qBAAY,EAAZ,IAAY;QAAZ,yBAAY;;IAC1C,IAAA,sBAAiB,EAAC,IAAI,EAAE;QACpB,gBAAgB,EAAE,YAAY;QAC9B,SAAS,EAAE;YACP,GAAG,EAAE,gBAAgB;YACrB,MAAM,EAAE;gBACJ,SAAS,EAAE;oBACP,GAAG,EAAE,OAAO;oBACZ,MAAM,EAAE;wBACJ,GAAG,EAAE,gBAAgB;wBACrB,MAAM,EAAE;4BACJ,IAAI,EAAE;gCACF,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,QAAQ;6BACjB;yBACJ;qBACJ;oBACD,QAAQ,EAAE;wBACN,GAAG,EAAE,kBAAkB;wBACvB,KAAK,EAAE;4BACH;gCACI,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,gBAAgB;gCACtB,MAAM,EAAE;oCACJ,OAAO,EAAE;wCACL,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE;4CACF,GAAG,EAAE,QAAQ;4CACb,IAAI,EAAE,QAAQ;yCACjB;qCACJ;oCACD,KAAK,EAAE;wCACH,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE;4CACF,GAAG,EAAE,QAAQ;4CACb,IAAI,EAAE,QAAQ;yCACjB;qCACJ;oCACD,OAAO,EAAE;wCACL,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE,MAAM;qCACf;iCACJ;6BACJ;yBACJ;qBACJ;iBACJ;aACJ;SACJ;KACJ,CAAC,CAAC;AACP,CAAC;AAlDD,8CAkDC;AAED,YAAY","sourcesContent":["/**\n *\n * This file is auto-generated. Do not edit manually: changes may be erased.\n * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.\n * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues\n * Aqua version: 0.7.7-362\n *\n */\nimport { FluencePeer } from '../..';\nimport type { CallParams$$ } from '../../internal/compilerSupport/v4';\nimport { registerService$$ } from '../../internal/compilerSupport/v4';\n\n// Services\n\nexport interface NodeUtilsDef {\n    read_file: (\n        path: string,\n        callParams: CallParams$$<'path'>,\n    ) =>\n        | { content: string | null; error: string | null; success: boolean }\n        | Promise<{ content: string | null; error: string | null; success: boolean }>;\n}\nexport function registerNodeUtils(service: NodeUtilsDef): void;\nexport function registerNodeUtils(serviceId: string, service: NodeUtilsDef): void;\nexport function registerNodeUtils(peer: FluencePeer, service: NodeUtilsDef): void;\nexport function registerNodeUtils(peer: FluencePeer, serviceId: string, service: NodeUtilsDef): void;\n\nexport function registerNodeUtils(...args: any) {\n    registerService$$(args, {\n        defaultServiceId: 'node_utils',\n        functions: {\n            tag: 'labeledProduct',\n            fields: {\n                read_file: {\n                    tag: 'arrow',\n                    domain: {\n                        tag: 'labeledProduct',\n                        fields: {\n                            path: {\n                                tag: 'scalar',\n                                name: 'string',\n                            },\n                        },\n                    },\n                    codomain: {\n                        tag: 'unlabeledProduct',\n                        items: [\n                            {\n                                tag: 'struct',\n                                name: 'ReadFileResult',\n                                fields: {\n                                    content: {\n                                        tag: 'option',\n                                        type: {\n                                            tag: 'scalar',\n                                            name: 'string',\n                                        },\n                                    },\n                                    error: {\n                                        tag: 'option',\n                                        type: {\n                                            tag: 'scalar',\n                                            name: 'string',\n                                        },\n                                    },\n                                    success: {\n                                        tag: 'scalar',\n                                        name: 'bool',\n                                    },\n                                },\n                            },\n                        ],\n                    },\n                },\n            },\n        },\n    });\n}\n\n// Functions\n"]}