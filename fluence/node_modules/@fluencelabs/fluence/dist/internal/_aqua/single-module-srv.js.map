{"version":3,"file":"single-module-srv.js","sourceRoot":"","sources":["../../../src/internal/_aqua/single-module-srv.ts"],"names":[],"mappings":";;;AAUA,wDAAsE;AAsBtE,SAAgB,WAAW;IAAC,cAAY;SAAZ,UAAY,EAAZ,qBAAY,EAAZ,IAAY;QAAZ,yBAAY;;IACpC,IAAA,sBAAiB,EAAC,IAAI,EAAE;QACpB,gBAAgB,EAAE,mBAAmB;QACrC,SAAS,EAAE;YACP,GAAG,EAAE,gBAAgB;YACrB,MAAM,EAAE;gBACJ,MAAM,EAAE;oBACJ,GAAG,EAAE,OAAO;oBACZ,MAAM,EAAE;wBACJ,GAAG,EAAE,gBAAgB;wBACrB,MAAM,EAAE;4BACJ,gBAAgB,EAAE;gCACd,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,QAAQ;6BACjB;yBACJ;qBACJ;oBACD,QAAQ,EAAE;wBACN,GAAG,EAAE,kBAAkB;wBACvB,KAAK,EAAE;4BACH;gCACI,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,uBAAuB;gCAC7B,MAAM,EAAE;oCACJ,KAAK,EAAE;wCACH,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE;4CACF,GAAG,EAAE,QAAQ;4CACb,IAAI,EAAE,QAAQ;yCACjB;qCACJ;oCACD,UAAU,EAAE;wCACR,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE;4CACF,GAAG,EAAE,QAAQ;4CACb,IAAI,EAAE,QAAQ;yCACjB;qCACJ;oCACD,OAAO,EAAE;wCACL,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE,MAAM;qCACf;iCACJ;6BACJ;yBACJ;qBACJ;iBACJ;gBACD,IAAI,EAAE;oBACF,GAAG,EAAE,OAAO;oBACZ,MAAM,EAAE;wBACJ,GAAG,EAAE,KAAK;qBACb;oBACD,QAAQ,EAAE;wBACN,GAAG,EAAE,kBAAkB;wBACvB,KAAK,EAAE;4BACH;gCACI,GAAG,EAAE,OAAO;gCACZ,IAAI,EAAE;oCACF,GAAG,EAAE,QAAQ;oCACb,IAAI,EAAE,QAAQ;iCACjB;6BACJ;yBACJ;qBACJ;iBACJ;gBACD,MAAM,EAAE;oBACJ,GAAG,EAAE,OAAO;oBACZ,MAAM,EAAE;wBACJ,GAAG,EAAE,gBAAgB;wBACrB,MAAM,EAAE;4BACJ,UAAU,EAAE;gCACR,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,QAAQ;6BACjB;yBACJ;qBACJ;oBACD,QAAQ,EAAE;wBACN,GAAG,EAAE,kBAAkB;wBACvB,KAAK,EAAE;4BACH;gCACI,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,cAAc;gCACpB,MAAM,EAAE;oCACJ,KAAK,EAAE;wCACH,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE;4CACF,GAAG,EAAE,QAAQ;4CACb,IAAI,EAAE,QAAQ;yCACjB;qCACJ;oCACD,OAAO,EAAE;wCACL,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE,MAAM;qCACf;iCACJ;6BACJ;yBACJ;qBACJ;iBACJ;aACJ;SACJ;KACJ,CAAC,CAAC;AACP,CAAC;AAtGD,kCAsGC;AAED,YAAY","sourcesContent":["/**\n *\n * This file is auto-generated. Do not edit manually: changes may be erased.\n * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.\n * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues\n * Aqua version: 0.7.7-362\n *\n */\nimport { FluencePeer } from '../..';\nimport type { CallParams$$ } from '../../internal/compilerSupport/v4';\nimport { registerService$$ } from '../../internal/compilerSupport/v4';\n\n// Services\n\nexport interface SrvDef {\n    create: (\n        wasm_b64_content: string,\n        callParams: CallParams$$<'wasm_b64_content'>,\n    ) =>\n        | { error: string | null; service_id: string | null; success: boolean }\n        | Promise<{ error: string | null; service_id: string | null; success: boolean }>;\n    list: (callParams: CallParams$$<null>) => string[] | Promise<string[]>;\n    remove: (\n        service_id: string,\n        callParams: CallParams$$<'service_id'>,\n    ) => { error: string | null; success: boolean } | Promise<{ error: string | null; success: boolean }>;\n}\nexport function registerSrv(service: SrvDef): void;\nexport function registerSrv(serviceId: string, service: SrvDef): void;\nexport function registerSrv(peer: FluencePeer, service: SrvDef): void;\nexport function registerSrv(peer: FluencePeer, serviceId: string, service: SrvDef): void;\n\nexport function registerSrv(...args: any) {\n    registerService$$(args, {\n        defaultServiceId: 'single_module_srv',\n        functions: {\n            tag: 'labeledProduct',\n            fields: {\n                create: {\n                    tag: 'arrow',\n                    domain: {\n                        tag: 'labeledProduct',\n                        fields: {\n                            wasm_b64_content: {\n                                tag: 'scalar',\n                                name: 'string',\n                            },\n                        },\n                    },\n                    codomain: {\n                        tag: 'unlabeledProduct',\n                        items: [\n                            {\n                                tag: 'struct',\n                                name: 'ServiceCreationResult',\n                                fields: {\n                                    error: {\n                                        tag: 'option',\n                                        type: {\n                                            tag: 'scalar',\n                                            name: 'string',\n                                        },\n                                    },\n                                    service_id: {\n                                        tag: 'option',\n                                        type: {\n                                            tag: 'scalar',\n                                            name: 'string',\n                                        },\n                                    },\n                                    success: {\n                                        tag: 'scalar',\n                                        name: 'bool',\n                                    },\n                                },\n                            },\n                        ],\n                    },\n                },\n                list: {\n                    tag: 'arrow',\n                    domain: {\n                        tag: 'nil',\n                    },\n                    codomain: {\n                        tag: 'unlabeledProduct',\n                        items: [\n                            {\n                                tag: 'array',\n                                type: {\n                                    tag: 'scalar',\n                                    name: 'string',\n                                },\n                            },\n                        ],\n                    },\n                },\n                remove: {\n                    tag: 'arrow',\n                    domain: {\n                        tag: 'labeledProduct',\n                        fields: {\n                            service_id: {\n                                tag: 'scalar',\n                                name: 'string',\n                            },\n                        },\n                    },\n                    codomain: {\n                        tag: 'unlabeledProduct',\n                        items: [\n                            {\n                                tag: 'struct',\n                                name: 'RemoveResult',\n                                fields: {\n                                    error: {\n                                        tag: 'option',\n                                        type: {\n                                            tag: 'scalar',\n                                            name: 'string',\n                                        },\n                                    },\n                                    success: {\n                                        tag: 'scalar',\n                                        name: 'bool',\n                                    },\n                                },\n                            },\n                        ],\n                    },\n                },\n            },\n        },\n    });\n}\n\n// Functions\n"]}